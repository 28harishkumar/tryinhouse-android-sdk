package com.inhouse.client

import com.facebook.react.bridge.Promise
import com.facebook.react.bridge.ReactApplicationContext
import com.facebook.react.bridge.ReactContextBaseJavaModule
import com.facebook.react.bridge.ReactMethod
import com.facebook.react.bridge.ReadableMap

class TrackingSDKModule(reactContext: ReactApplicationContext) : ReactContextBaseJavaModule(reactContext) {

    override fun getName(): String = "TrackingSDK"

    @ReactMethod
    fun initialize(
        projectToken: String,
        shortLinkDomain: String,
        serverUrl: String?,
        enableDebugLogging: Boolean,
        promise: Promise
    ) {
        try {
            TrackingSDK.getInstance().initialize(
                context = reactApplicationContext,
                projectToken = projectToken,
                shortLinkDomain = shortLinkDomain,
                serverUrl = serverUrl ?: "https://your-api-server.com",
                enableDebugLogging = enableDebugLogging
            )
            promise.resolve(null)
        } catch (e: Exception) {
            promise.reject("INITIALIZATION_ERROR", e.message, e)
        }
    }

    @ReactMethod
    fun trackAppOpen(shortLink: String?) {
        TrackingSDK.getInstance().trackAppOpen(shortLink)
    }

    @ReactMethod
    fun trackSessionStart(shortLink: String?) {
        TrackingSDK.getInstance().trackSessionStart(shortLink)
    }

    @ReactMethod
    fun trackShortLinkClick(shortLink: String, deepLink: String?) {
        TrackingSDK.getInstance().trackShortLinkClick(shortLink, deepLink)
    }

    @ReactMethod
    fun trackCustomEvent(eventType: String, shortLink: String?, additionalData: ReadableMap?) {
        val dataMap = additionalData?.toHashMap()?.mapValues { it.value.toString() }
        TrackingSDK.getInstance().trackCustomEvent(eventType, shortLink, dataMap)
    }
}